# Generated by Django 4.2.2 on 2023-06-18 16:15

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique UUID. Auto generated on creation.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True, unique=True, verbose_name='City Name')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='City Location (Lat, Lng)')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='ConditionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Weather Condition Title', max_length=50, verbose_name='Weather Condtion Title')),
                ('short_name', models.CharField(blank=True, editable=False, help_text='Weather Condition Short Name (helpgul for yr.no weather api)', max_length=50, null=True, verbose_name='Weather Condtion Short Name')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('icon_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Icon image')),
            ],
            options={
                'verbose_name': 'Weather Condition Category',
                'verbose_name_plural': 'Weather Condition Categories',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_auto_forecast', models.BooleanField(default=True, verbose_name='Enable automated forecasts')),
                ('temp_units', models.CharField(choices=[('celsius', '°C'), ('fareinheit', '°F'), ('kelvin', 'K')], default='celsius', max_length=255, verbose_name='Temperature')),
                ('wind_units', models.CharField(choices=[('knots', 'knots'), ('km_p_hr', 'km/h'), ('mtr_p_s', 'm/s'), ('mile_p_hr', 'mph'), ('feet_p_s', 'ft/s')], default='km_p_hr', max_length=255, verbose_name='Wind')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_date', models.DateField(verbose_name='Forecasts Date')),
                ('max_temp', models.IntegerField(blank=True, verbose_name='Maximum Temperature')),
                ('min_temp', models.IntegerField(blank=True, verbose_name='Minimum Temperaure')),
                ('wind_direction', models.IntegerField(blank=True, null=True, verbose_name='Wind Direction')),
                ('wind_speed', models.IntegerField(blank=True, null=True, verbose_name='Wind Speed')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecastmanager.city', verbose_name='City')),
                ('condition', models.ForeignKey(help_text='E.g Light Showers', null=True, on_delete=django.db.models.deletion.CASCADE, to='forecastmanager.conditioncategory', verbose_name='General Weather Condition')),
            ],
            options={
                'verbose_name': 'Forecast',
                'verbose_name_plural': 'Forecasts',
                'unique_together': {('city', 'forecast_date')},
            },
        ),
    ]
